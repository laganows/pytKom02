
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E335F84D7EFC4D14874EA0EE9C533FF7'
    
_lr_action_items = {'RETURN':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[2,-17,-19,-20,-22,-18,2,2,-16,-15,-23,-6,-21,-5,-4,-14,2,-3,2,-13,-2,2,-38,-37,-8,2,-24,-36,-26,-25,-12,-27,-7,-39,2,2,-28,2,2,-33,-34,-35,-29,-31,2,2,-72,-30,-32,]),'WHILE':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[5,-17,-19,-20,-22,-18,5,5,-16,-15,-23,-6,-21,-5,-4,-14,5,-3,5,-13,-2,5,-38,-37,-8,5,-24,-36,-26,-25,-12,-27,-7,-39,5,5,-28,5,5,-33,-34,-35,-29,-31,5,5,-72,-30,-32,]),'PRINT':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[4,-17,-19,-20,-22,-18,4,4,-16,-15,-23,-6,-21,-5,-4,-14,4,-3,4,-13,-2,4,-38,-37,-8,4,-24,-36,-26,-25,-12,-27,-7,-39,4,4,-28,4,4,-33,-34,-35,-29,-31,4,4,-72,-30,-32,]),'NEQ':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,71,-45,71,71,71,71,-65,-64,71,71,71,-57,None,-50,71,None,-56,-46,-48,-47,-49,71,None,None,None,None,71,71,-66,-67,71,71,]),'LE':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,57,-45,57,57,57,57,-65,-64,57,57,57,-57,None,-50,57,None,-56,-46,-48,-47,-49,57,None,None,None,None,57,57,-66,-67,57,57,]),'%':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,58,-45,58,58,58,58,-65,-64,58,58,58,58,58,-50,58,58,58,58,-48,58,-49,58,58,58,58,58,58,58,-66,-67,58,58,]),'&':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,59,-45,59,59,59,59,-65,-64,59,59,59,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,59,-58,-60,-63,-59,59,59,-66,-67,59,59,]),')':([1,8,13,16,34,39,40,44,77,78,79,80,81,84,85,86,87,90,91,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,126,127,128,134,139,142,],[-42,-44,-41,-43,-45,80,81,-69,115,116,-40,-65,-64,-68,119,120,-71,122,123,-74,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-66,-67,-73,138,-76,-70,-77,-75,]),'(':([0,2,3,4,5,6,7,9,10,11,14,15,17,18,19,20,21,22,23,24,25,27,31,33,34,38,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,88,92,95,96,115,116,118,121,122,123,131,132,133,135,136,140,141,143,144,145,],[9,9,-17,9,38,-19,-20,9,-22,-18,9,9,-16,-15,-23,-6,44,47,-21,-5,-4,-14,9,-3,44,9,9,-13,-2,9,9,9,9,-38,-37,-8,94,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,9,9,9,-36,-26,-25,9,-12,-27,-7,9,-39,9,9,9,-28,9,9,-33,-34,-35,-29,-31,9,9,-72,-30,-32,]),'+':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,62,-45,62,62,62,62,-65,-64,62,62,62,62,62,-50,62,62,62,-46,-48,-47,-49,62,62,62,62,62,62,62,-66,-67,62,62,]),'*':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,63,-45,63,63,63,63,-65,-64,63,63,63,63,63,-50,63,63,63,63,-48,63,-49,63,63,63,63,63,63,63,-66,-67,63,63,]),'-':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,64,-45,64,64,64,64,-65,-64,64,64,64,64,64,-50,64,64,64,-46,-48,-47,-49,64,64,64,64,64,64,64,-66,-67,64,64,]),',':([1,8,13,16,34,51,52,80,81,84,87,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,124,126,128,130,134,139,142,],[-42,-44,-41,-43,-45,-10,93,-65,-64,118,-71,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-66,-67,-9,137,-76,-11,-70,-77,-75,]),'/':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,65,-45,65,65,65,65,-65,-64,65,65,65,65,65,-50,65,65,65,65,-48,65,-49,65,65,65,65,65,65,65,-66,-67,65,65,]),'UNTIL':([3,6,7,10,11,17,18,19,23,27,41,42,48,49,70,74,75,76,83,88,96,121,131,132,133,135,136,144,145,],[-17,-19,-20,-22,-18,-16,-15,-23,-21,-14,82,-13,-38,-37,-24,-36,-26,-25,-12,-27,-39,-28,-33,-34,-35,-29,-31,-30,-32,]),'INTEGER':([0,2,3,4,6,7,9,10,11,14,15,17,18,19,20,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,88,92,95,96,115,116,118,121,122,123,131,132,133,135,136,140,141,143,144,145,],[13,13,-17,13,-19,-20,13,-22,-18,13,13,-16,-15,-23,-6,-21,-5,-4,-14,13,-3,13,13,-13,-2,13,13,13,13,-38,-37,-8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-24,13,13,13,-36,-26,-25,13,-12,-27,-7,13,-39,13,13,13,-28,13,13,-33,-34,-35,-29,-31,13,13,-72,-30,-32,]),';':([1,8,13,16,21,26,28,29,32,34,35,36,37,51,52,79,80,81,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,124,130,],[-42,-44,-41,-43,-45,48,49,50,70,-45,74,75,76,-10,92,-40,-65,-64,121,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,133,-66,-67,-9,-11,]),'^':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,73,-45,73,73,73,73,-65,-64,73,73,73,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,73,-58,-60,-63,-59,73,-53,-66,-67,73,73,]),'=':([21,53,125,],[46,95,95,]),'<':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,60,-45,60,60,60,60,-65,-64,60,60,60,-57,None,-50,60,None,-56,-46,-48,-47,-49,60,None,None,None,None,60,60,-66,-67,60,60,]),'>':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,68,-45,68,68,68,68,-65,-64,68,68,68,-57,None,-50,68,None,-56,-46,-48,-47,-49,68,None,None,None,None,68,68,-66,-67,68,68,]),'SHR':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,56,-45,56,56,56,56,-65,-64,56,56,56,-57,56,-50,56,56,-56,-46,-48,-47,-49,56,56,56,56,56,56,56,-66,-67,56,56,]),'REPEAT':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[14,-17,-19,-20,-22,-18,14,14,-16,-15,-23,-6,-21,-5,-4,-14,14,-3,14,-13,-2,14,-38,-37,-8,14,-24,-36,-26,-25,-12,-27,-7,-39,14,14,-28,14,14,-33,-34,-35,-29,-31,14,14,-72,-30,-32,]),'STRING':([0,2,3,4,6,7,9,10,11,14,15,17,18,19,20,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,88,92,95,96,115,116,118,121,122,123,131,132,133,135,136,140,141,143,144,145,],[16,16,-17,16,-19,-20,16,-22,-18,16,16,-16,-15,-23,-6,-21,-5,-4,-14,16,-3,16,16,-13,-2,16,16,16,16,-38,-37,-8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-24,16,16,16,-36,-26,-25,16,-12,-27,-7,16,-39,16,16,16,-28,16,16,-33,-34,-35,-29,-31,16,16,-72,-30,-32,]),'ELSE':([3,6,7,10,11,17,18,19,23,27,48,49,70,74,75,76,88,96,121,131,132,133,135,136,144,145,],[-17,-19,-20,-22,-18,-16,-15,-23,-21,-14,-38,-37,-24,-36,-26,-25,-27,-39,-28,-33,-34,-35,140,141,-30,-32,]),'GE':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,69,-45,69,69,69,69,-65,-64,69,69,69,-57,None,-50,69,None,-56,-46,-48,-47,-49,69,None,None,None,None,69,69,-66,-67,69,69,]),'EQ':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,67,-45,67,67,67,67,-65,-64,67,67,67,-57,None,-50,67,None,-56,-46,-48,-47,-49,67,None,None,None,None,67,67,-66,-67,67,67,]),'ID':([0,2,3,4,6,7,9,10,11,14,15,17,18,19,20,23,24,25,27,30,31,33,38,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,88,92,93,95,96,115,116,118,121,122,123,129,131,132,133,135,136,140,141,143,144,145,],[21,34,-17,34,-19,-20,34,-22,-18,21,21,-16,-15,-23,-6,-21,-5,-4,-14,53,21,-3,34,21,-13,-2,34,21,34,34,-38,-37,-8,21,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-24,34,34,34,-36,-26,-25,34,-12,-27,-7,125,34,-39,21,21,34,-28,21,21,139,-33,-34,-35,-29,-31,21,21,-72,-30,-32,]),'IF':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[22,-17,-19,-20,-22,-18,22,22,-16,-15,-23,-6,-21,-5,-4,-14,22,-3,22,-13,-2,22,-38,-37,-8,22,-24,-36,-26,-25,-12,-27,-7,-39,22,22,-28,22,22,-33,-34,-35,-29,-31,22,22,-72,-30,-32,]),'AND':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,55,-45,55,55,55,55,-65,-64,55,55,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,55,-58,-60,-63,-59,-51,-53,-66,-67,55,55,]),':':([21,],[45,]),'SHL':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,61,-45,61,61,61,61,-65,-64,61,61,61,-57,61,-50,61,61,-56,-46,-48,-47,-49,61,61,61,61,61,61,61,-66,-67,61,61,]),'}':([3,6,7,10,11,17,18,19,20,23,24,25,27,33,43,48,49,50,54,70,74,75,76,88,92,96,121,131,132,133,135,136,143,144,145,],[-17,-19,-20,-22,-18,-16,-15,-23,-6,-21,-5,-4,-14,-3,-2,-38,-37,-8,96,-24,-36,-26,-25,-27,-7,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'FLOAT':([0,2,3,4,6,7,9,10,11,14,15,17,18,19,20,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,88,92,95,96,115,116,118,121,122,123,131,132,133,135,136,140,141,143,144,145,],[1,1,-17,1,-19,-20,1,-22,-18,1,1,-16,-15,-23,-6,-21,-5,-4,-14,1,-3,1,1,-13,-2,1,1,1,1,-38,-37,-8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-24,1,1,1,-36,-26,-25,1,-12,-27,-7,1,-39,1,1,1,-28,1,1,-33,-34,-35,-29,-31,1,1,-72,-30,-32,]),'|':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,72,-45,72,72,72,72,-65,-64,72,72,72,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,72,-58,-60,-63,-59,-51,-53,-66,-67,72,72,]),'BREAK':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[26,-17,-19,-20,-22,-18,26,26,-16,-15,-23,-6,-21,-5,-4,-14,26,-3,26,-13,-2,26,-38,-37,-8,26,-24,-36,-26,-25,-12,-27,-7,-39,26,26,-28,26,26,-33,-34,-35,-29,-31,26,26,-72,-30,-32,]),'CONTINUE':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,140,141,143,144,145,],[28,-17,-19,-20,-22,-18,28,28,-16,-15,-23,-6,-21,-5,-4,-14,28,-3,28,-13,-2,28,-38,-37,-8,28,-24,-36,-26,-25,-12,-27,-7,-39,28,28,-28,28,28,-33,-34,-35,-29,-31,28,28,-72,-30,-32,]),'error':([0,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,27,31,33,38,43,44,47,48,49,50,54,70,74,75,76,88,92,96,121,131,132,133,135,136,143,144,145,],[29,-17,36,-19,-20,39,-22,-18,29,-16,-15,-23,-6,-21,-5,-4,-14,29,-3,78,-2,86,91,-38,-37,-8,29,-24,-36,-26,-25,-27,-7,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'{':([0,3,6,7,10,11,14,15,17,18,19,20,23,24,25,27,31,33,41,42,43,45,48,49,50,54,70,74,75,76,83,88,92,96,115,116,121,122,123,131,132,133,135,136,138,140,141,143,144,145,],[31,-17,-19,-20,-22,-18,31,31,-16,-15,-23,-6,-21,-5,-4,-14,31,-3,31,-13,-2,31,-38,-37,-8,31,-24,-36,-26,-25,-12,-27,-7,-39,31,31,-28,31,31,-33,-34,-35,-29,-31,31,31,31,-72,-30,-32,]),'$end':([3,6,7,10,11,12,15,17,18,19,20,23,24,25,27,33,43,48,49,50,70,74,75,76,88,92,96,121,131,132,133,135,136,143,144,145,],[-17,-19,-20,-22,-18,0,-1,-16,-15,-23,-6,-21,-5,-4,-14,-3,-2,-38,-37,-8,-24,-36,-26,-25,-27,-7,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'TYPE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,27,31,33,43,48,49,50,54,70,74,75,76,88,92,94,96,121,131,132,133,135,136,137,143,144,145,],[30,-17,-19,-20,-22,-18,30,-16,-15,-23,-6,-21,-5,-4,-14,30,-3,-2,-38,-37,-8,30,-24,-36,-26,-25,-27,-7,129,-39,-28,-33,-34,-35,-29,-31,129,-72,-30,-32,]),'OR':([1,8,13,16,21,32,34,35,37,40,79,80,81,87,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,130,134,],[-42,-44,-41,-43,-45,66,-45,66,66,66,66,-65,-64,66,66,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-66,-67,66,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([44,],[84,]),'choice_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'arg':([94,137,],[128,142,]),'repeat_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'return_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'const':([0,2,4,9,14,15,31,38,41,44,45,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,82,95,115,116,118,122,123,140,141,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'continue_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'init':([30,93,],[51,124,]),'program':([0,],[12,]),'blocks':([0,31,],[15,54,]),'assignment':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'labeled_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'compound_instr':([0,14,15,31,41,45,54,115,116,122,123,138,140,141,],[19,19,19,19,19,19,19,19,19,19,19,143,19,19,]),'inits':([30,],[52,]),'declaration':([0,15,31,54,],[20,20,20,20,]),'args_list':([94,],[126,]),'condition':([38,47,82,],[77,90,117,]),'instructions':([14,],[41,]),'expr_list_or_empty':([44,],[85,]),'break_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'instruction':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[24,42,24,24,83,88,24,131,132,135,136,144,145,]),'args_list_or_empty':([94,],[127,]),'fundef':([0,15,31,54,],[25,25,25,25,]),'print_instr':([0,14,15,31,41,45,54,115,116,122,123,140,141,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([0,2,4,9,14,15,31,38,41,44,45,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,82,95,115,116,118,122,123,140,141,],[32,35,37,40,32,32,32,79,32,87,32,89,79,32,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,79,130,32,32,134,32,32,32,32,]),'block':([0,15,31,54,],[33,43,33,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','Cparser.py',42),
  ('blocks -> blocks block','blocks',2,'p_blocks','Cparser.py',50),
  ('blocks -> block','blocks',1,'p_blocks','Cparser.py',51),
  ('block -> fundef','block',1,'p_block','Cparser.py',59),
  ('block -> instruction','block',1,'p_block','Cparser.py',60),
  ('block -> declaration','block',1,'p_block','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',77),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',78),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',86),
  ('inits -> init','inits',1,'p_inits','Cparser.py',87),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',95),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',106),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',107),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',121),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',122),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',123),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',124),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',125),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',126),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',127),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',133),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',134),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',144),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',149),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',154),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',155),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',156),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',157),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',183),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',184),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',192),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',197),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',203),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',208),
  ('compound_instr -> { blocks }','compound_instr',3,'p_compound_instr','Cparser.py',214),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',219),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',224),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',225),
  ('const -> STRING','const',1,'p_const','Cparser.py',226),
  ('expression -> const','expression',1,'p_expression','Cparser.py',231),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',232),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',233),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',234),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',235),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',236),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',237),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',238),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',239),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',240),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',241),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',242),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',243),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',244),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',245),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',246),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',247),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',248),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',249),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',250),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',251),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',252),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',253),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',254),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',276),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',277),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',285),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',286),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',308),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',313),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',314),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',323),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',324),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',332),
]
